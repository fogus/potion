{"version":1,"ops":[{"type":1,"author":{"id":"fbf72c752afc545c7922762fa783e543f7e071c0"},"timestamp":1426567426,"metadata":{"github-id":"MDU6SXNzdWU2MjI4NTg1Nw==","github-url":"https://github.com/perl11/potion/issues/78","origin":"github"},"title":"call on nil segfaults","message":"I'm trying to make a program that print 100k-th odd prime number until 10M. The stackoverflow [question](https://stackoverflow.com/questions/29091475/printing-odd-prime-every-100k-primes-found-in-potion).\n\n```\nlast = 3 \nres = (last) # create array\nloop:\n   last += 2\n   prime = true \n   len = res length -1\n   i = 0\n   while(i\u003clen):\n      v = res at(i)\n      if(v*v \u003e last): break.\n      if(last%v == 0): prime = false, break.\n      i += 1\n   .\n   if(prime):\n          res append(last)\n          if(res size % 100000 == 0): last print.\n          if(last\u003e9999999): break.\n   .\n.\n```\n\nBut it gives `Segmentation fault (core dumped)`\nFor reference, the working ruby version:\n\n```\nres = [last=3]\nloop do \n   last += 2\n   prime = true\n   res.each do |v|\n          break if v*v \u003e last \n          if last % v == 0 \n        prime = false \n        break\n      end\n   end\n   if prime\n     res \u003c\u003c last \n     puts last if res.length % 100000 == 0 \n     break if last \u003e 9999999\n   end\nend\n```","files":null}]}