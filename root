{"version":1,"ops":[{"type":1,"author":{"id":"dc8a501266912e06a2fdd3f9cafe05d1338b8aad"},"timestamp":1382134316,"metadata":{"github-id":"MDU6SXNzdWUyMTI0ODI4NA==","github-url":"https://github.com/perl11/potion/issues/63","origin":"github"},"title":"Simple extern FFI","message":"See https://github.com/perl11/potion/wiki/FFI and p2 branch ffi\n- calling convention with different ABI (syntax and code, no win64, no stdcall yet)\n- either precompile each ffi proto to a signature translation wrapper, or translate the sigs at the call ext part in the vm, similar to filling in defaults.\n- return type declaration syntax. like an optional extern int sleep(sec=N). \n  or extern  sleep(sec=N) =\u003e N\n- call it (vm and jit)\n- move some of compile-time parts to the VM (OP_EXTERN dlsym). currently we can only call into already loaded libs, or load a lib at compile-time (as in p2 BEGIN{})\n\naggregate types and header parser later","files":null}]}