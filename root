{"version":1,"ops":[{"type":1,"author":{"id":"6c4ce90c60e1731e26a10063255a855b265dc6e4"},"timestamp":1445248928,"metadata":{"github-id":"MDU6SXNzdWUxMTIxMTM0MzU=","github-url":"https://github.com/perl11/potion/issues/87","origin":"github"},"title":"More segmentation faults","message":"The following lines each result in a segfault\n\n```\nFunction()()\n```\n\nThis can be fixed by a check in potion_call that the closure and closure-\u003emethod is not null and returning PN_NIL if either are null. You might also want to output a warning that the method was null.\n\n```\nError()\n```\n\nThis is caused by the REPL trying to print the error object by converting to string, where the message is set to null. The offending call to `potion_str_ptr` being in `potion_error_string`.\n\n```\nCompiled()\n```\n\nAgain this is caused by the REPL trying to print out the value. The problem occurs in `potion_proto_string` about 9 lines in, on the `pn_printf` statement.\n\nThe last two errors only occur in the REPL, and don't cause a problem unless they are called or converted to string, when the lack of data in the structs becomes a problem.\n\nPossibly for Error, it would be nice to have a constructor that took a string and returned a valid Error object, but I can't see any reason why the Compiled constructor should be exposed at all.\n\n```\nLobby cmp 0\n```\n\nThis is caused by an infinite loop in `potion_any_cmp`, where there should probably be a check for lobby and if so, directly return a value.","files":null}]}