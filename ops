{"version":1,"ops":[{"type":3,"author":{"id":"dc8a501266912e06a2fdd3f9cafe05d1338b8aad"},"timestamp":1445249390,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0OTE3MzcyNQ==","github-url":"https://github.com/perl11/potion/issues/87#issuecomment-149173725"},"message":"Thanks. Do you care for a patch, so your name will be in the git log?","files":null},{"type":3,"author":{"id":"6c4ce90c60e1731e26a10063255a855b265dc6e4"},"timestamp":1445954383,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MTUwNDU4OQ==","github-url":"https://github.com/perl11/potion/issues/87#issuecomment-151504589"},"message":"I've fixed `potion_any_cmp` with the following commit - https://github.com/robotii/potion/commit/8833effbb33ba18a21c2b2830ab569698956c39a\n\nI'm not sure if this is the right way to go or not.","files":null},{"type":3,"author":{"id":"dc8a501266912e06a2fdd3f9cafe05d1338b8aad"},"timestamp":1445954589,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MTUwNTM2MQ==","github-url":"https://github.com/perl11/potion/issues/87#issuecomment-151505361"},"message":"No, you changed self cmp value to NIL cmp value.\nChecking for Lobby is the right way.","files":null},{"type":3,"author":{"id":"6c4ce90c60e1731e26a10063255a855b265dc6e4"},"timestamp":1445955454,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MTUwOTg3Mw==","github-url":"https://github.com/perl11/potion/issues/87#issuecomment-151509873"},"message":"That's fine - I can do the check for Lobby.\n\nThe problem is, that this is called for any user objects that don't explicitly implement `cmp`. This is because Object does not explicitly implement `cmp`, which means that it is inherited from Lobby.\n\n```\nC = class (): /value = 0.\nC() cmp 0\n```\n\nneeds to be defined as well.\n\nWe can't compare the pointers by default, as this could result in the comparison changing after a garbage collection (well, we could if you don't mind the value being essentially random).\n\nI'm not saying the way I did it is the right way, just that we need to make the comparison work for more than just Lobby. Either that, or we need to override the method in Object, which amounts to the same thing.","files":null},{"type":3,"author":{"id":"dc8a501266912e06a2fdd3f9cafe05d1338b8aad"},"timestamp":1445956709,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MTUyMTMyNg==","github-url":"https://github.com/perl11/potion/issues/87#issuecomment-151521326"},"message":"I see. A missing cmp method should rather error I believe.","files":null},{"type":3,"author":{"id":"6c4ce90c60e1731e26a10063255a855b265dc6e4"},"timestamp":1445958038,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MTUzMDg3Mw==","github-url":"https://github.com/perl11/potion/issues/87#issuecomment-151530873"},"message":"The error with `Error()` can be fixed in internal.c by adding something like\n\n``` c\n  if (e-\u003emessage == PN_NIL)\n    return potion_str_format(P, \"** unspecified error\");\n```\n\ninto `potion_error_string`\n\nThis has the advantage that we can create our own `Error` objects and check for them, rather than disallowing access to the Error object.\n\nI also added a constructor for `Error` in https://github.com/robotii/potion/commit/5a3f9f80c146e3db3a4401348611615361259313 although this is still a work in progress and I haven't tested it yet.\n\nMy plan is to change `potion_object_new` and `potion_class` to disallow creating anything other than `Object` or user-defined types, and to disallow sub-classing in the same way. That way we would have to explicitly allow creation of \"special\" objects by creating a constructor for them.\n\nLet me know if I'm on the right path with this, as I don't want to waste time, if it's not the right solution.","files":null},{"type":3,"author":{"id":"dc8a501266912e06a2fdd3f9cafe05d1338b8aad"},"timestamp":1445959715,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MTU0MDY1Ng==","github-url":"https://github.com/perl11/potion/issues/87#issuecomment-151540656"},"message":"Sounds good. \nI already fixed all other segv's, just not Compiled string. I need my linux box for this.","files":null}]}