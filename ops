{"version":1,"ops":[{"type":3,"author":{"id":"dc8a501266912e06a2fdd3f9cafe05d1338b8aad"},"timestamp":1374169347,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxMjAxMDQ5","github-url":"https://github.com/perl11/potion/issues/36#issuecomment-21201049"},"message":"use integer\n\n$ ./potion -B -V -e '(60000000000 / 2) == 30000000000'\n\n```\n-- parsed --\ncode (eq (expr (table (div (expr (value (60000000000 nil nil)) expr (value (2 nil nil))))) expr (value (30000000000 nil nil))))\n-- compiled --\n; function definition: 0x7f99e05b9c58 ; 24 bytes\n; () 2 registers\n.value 60000000000 ; 0\n.value 30000000000 ; 1\n[1] loadk    0 0    ; 60000000000\n[2] loadpn   1 5    ; 2\n[3] div      0 1    \n[4] loadk    1 1    ; 30000000000\n[5] eq       0 1    \n[6] return   0      \n; function end\n-- vm returned 0x6 (fixed=71768, actual=83816, reserved=262144) --\ntrue\n```\n\n$ ./potion -B -V -e '(60e+9 / 2) == 30000000000'\n\n```\n-- parsed --\ncode (eq (expr (table (div (expr (value (60000000000.0 nil nil)) expr (value (2 nil nil))))) expr (value (30000000000 nil nil))))\n-- compiled --\n; function definition: 0x7f613534dcb0 ; 24 bytes\n; () 2 registers\n.value 60000000000.0 ; 0\n.value 30000000000 ; 1\n[1] loadk    0 0    ; 60000000000.0\n[2] loadpn   1 5    ; 2\n[3] div      0 1    \n[4] loadk    1 1    ; 30000000000\n[5] eq       0 1    \n[6] return   0      \n; function end\n-- vm returned 0x2 (fixed=71768, actual=83928, reserved=262144) --\nfalse\n```\n\nexponential notation 60e+9 is always expanded to double.\nuse integer to cast it. \n\nlike with my enhanced version:\n$  bin/potion -B -Dt -e '(60e+9 integer / 2) == 30000000000'\n-- run-time --\n[ 1] loadk    0 0   ; 60000000000.0\n[ 2] move     1 0   ; 60000000000.0\n[ 3] loadk    0 1   ; integer\n[ 4] bind     0 1   ; function()\n[ 5] loadpn   2 0   ; nil\n[ 6] call     0 2   ; 60000000000\n[ 7] loadpn   1 5   ; 2\n[ 8] div      0 1   ; 30000000000\n[ 9] loadk    1 2   ; 30000000000\n[10] eq       0 1   ; true\n[11] return   0     ; true","files":null},{"type":4,"author":{"id":"dc8a501266912e06a2fdd3f9cafe05d1338b8aad"},"timestamp":1374169347,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NTcxMTg1NDA="},"status":2},{"type":3,"author":{"id":"dc8a501266912e06a2fdd3f9cafe05d1338b8aad"},"timestamp":1374169857,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxMjAxNjA1","github-url":"https://github.com/perl11/potion/issues/36#issuecomment-21201605"},"message":"Sorry. To answer your original question: cast to double is done with number.\n\n```\n$  bin/potion -B -Dt -e '(60e+9 / 2) number == 30000000000.0'\n-- run-time --\n[ 1] loadk    0 0   ; 60000000000.0\n[ 2] loadpn   1 5   ; 2\n[ 3] div      0 1   ; 30000000000.0\n[ 4] loadk    1 1   ; 30000000000.0\n[ 5] eq       0 1   ; false\n[ 6] return   0     ; false\n```\n\nLooks bad.\nTrying 1e-6 precision, there is a problem with the comparison operators:\n\n```\n$  bin/potion -B -Dt -e 'a=(60e+9 / 2) - 30000000000.0\na abs \u003c 1e-6'\n-- run-time --\n[ 1] loadk    0 0   ; 60000000000.0\n[ 2] loadpn   1 5   ; 2\n[ 3] div      0 1   ; 30000000000.0\n[ 4] loadk    1 1   ; 30000000000.0\n[ 5] sub      0 1   ; 0.0\n[ 6] setlocal 0 0   ; 0.0\n[ 7] getlocal 0 0   ; 0.0\n[ 8] move     1 0   ; 0.0\n[ 9] loadk    0 2   ; abs\n[10] bind     0 1   ; function()\n[11] loadpn   2 0   ; nil\n[12] call     0 2   ; 0.0\n[13] loadk    1 3   ; 0.000001\n[14] lt       0 1   ; false\n[15] return   0     ; false\n```\n\n0.0 should be less then 0.000001","files":null},{"type":4,"author":{"id":"dc8a501266912e06a2fdd3f9cafe05d1338b8aad"},"timestamp":1374169857,"metadata":{"github-id":"MDEzOlJlb3BlbmVkRXZlbnQ1NzEyMDE3NQ=="},"status":1},{"type":3,"author":{"id":"fc6c73182a86c7e5ad54c809b0f03de5f13d9bd6"},"timestamp":1374181622,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxMjE0OTk1","github-url":"https://github.com/perl11/potion/issues/36#issuecomment-21214995"},"message":"I pinpointed the error, it was not about types but about the VM, weird!\n\n``` ruby\npotion -B -e '(60000000000 / 2) string print'\n# (30000000000)\npotion -X -e '(60000000000 / 2) string print'\n# (2082712576)\n```\n\n[Flags source code](https://github.com/fogus/potion/blob/master/core/potion.c#L27)\n\nSince -X is default, this difference was messing with my results. Is this a bug? Note: I'm not using your p2 branch, just this potion branch.","files":null},{"type":3,"author":{"id":"dc8a501266912e06a2fdd3f9cafe05d1338b8aad"},"timestamp":1374186830,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxMjIwMDg0","github-url":"https://github.com/perl11/potion/issues/36#issuecomment-21220084"},"message":"Yes, jit does not check for int overflow. It does this on purpose, but I want to fix it. \nEsp. with JIT it should be faster to check the CPU overflow flag.","files":null}]}